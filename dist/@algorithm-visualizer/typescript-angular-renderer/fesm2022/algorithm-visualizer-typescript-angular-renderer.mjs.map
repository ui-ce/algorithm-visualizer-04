{"version":3,"file":"algorithm-visualizer-typescript-angular-renderer.mjs","sources":["../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-player/web-player.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-player/web-player.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/array-2d-renderer/components/highlight-layer/array-2d-highlight-layer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/array-2d-renderer/components/highlight-layer/array-2d-highlight-layer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/array-2d-renderer/array-2d-renderer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/array-2d-renderer/array-2d-renderer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/chart-renderer/chart-highlight-layer/chart-highlight-layer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/chart-renderer/chart-highlight-layer/chart-highlight-layer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/chart-renderer/chart-renderer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/chart-renderer/chart-renderer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/graph-renderer/graph-renderer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/graph-renderer/graph-renderer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/log-renderer/log-renderer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/components/log-renderer/log-renderer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/web-renderer.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/lib/web-renderer/web-renderer.html","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/public-api.ts","../../../../modules/renderer/typescript-angular-renderer/projects/typescript-angular-renderer/src/algorithm-visualizer-typescript-angular-renderer.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { KnobModule } from 'primeng/knob';\nimport { SliderModule } from 'primeng/slider';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'web-player',\n  imports: [FormsModule, KnobModule, SliderModule, ButtonModule],\n  templateUrl: './web-player.html',\n  styleUrl: './web-player.scss',\n})\nexport class WebPlayer implements OnDestroy {\n  @Input()\n  public animationLength: number;\n\n  @Input()\n  public frameIndex: number = 0;\n\n  @Input()\n  public frameTime: number = 200;\n\n  @Output()\n  public frameIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  protected playing: boolean = false;\n\n  private _timer: ReturnType<typeof setInterval>;\n\n  public ngOnDestroy(): void {\n    this.stop();\n  }\n\n  public play(): void {\n    if (!this.animationLength) {\n      return;\n    }\n\n    this.playing = true;\n    this._timer = setInterval(() => this.next(), this.frameTime);\n  }\n\n  public stop(): void {\n    this.playing = false;\n    if (this._timer) {\n      clearInterval(this._timer);\n    }\n  }\n\n  public togglePlay(): void {\n    if (this.playing) {\n      this.stop();\n      return;\n    }\n\n    this.play();\n  }\n\n  public next(): void {\n    this.frameIndex = Math.min(this.frameIndex + 1, this.animationLength - 1);\n    this.frameIndexChange.emit(this.frameIndex);\n\n    if (this.frameIndex === this.animationLength - 1) {\n      this.stop();\n    }\n  }\n\n  public prev(): void {\n    if (!this.animationLength) {\n      return;\n    }\n\n    this.frameIndex = Math.max(this.frameIndex - 1, 0);\n    this.frameIndexChange.emit(this.frameIndex);\n  }\n\n  public first(): void {\n    this.frameIndex = 0;\n    this.frameIndexChange.emit(this.frameIndex);\n  }\n\n  public last(): void {\n    if (!this.animationLength) {\n      return;\n    }\n\n    this.frameIndex = this.animationLength - 1;\n    this.frameIndexChange.emit(this.frameIndex);\n  }\n\n  protected onFrameTimeChanged(frameTime: number): void {\n    this.frameTime = frameTime;\n\n    if (!this.playing) {\n      return;\n    }\n\n    clearInterval(this._timer);\n    this._timer = setInterval(() => this.next(), this.frameTime);\n  }\n\n  protected onFrameIndexChanged(frameIndex: number) {\n    this.frameIndex = frameIndex;\n    this.frameIndexChange.emit(this.frameIndex);\n  }\n}\n","<div class=\"toolbar\">\r\n  <div class=\"player\">\r\n    <p-button [size]=\"'small'\" (click)=\"first()\" icon=\"pi pi-angle-double-left\"/>\r\n    <p-button [size]=\"'small'\" (click)=\"prev()\" icon=\"pi pi-angle-left\"/>\r\n    <p-button [size]=\"'small'\" (click)=\"togglePlay()\" [icon]=\"this.playing ? 'pi pi-spin pi-spinner' : 'pi pi-play'\"/>\r\n    <p-button [size]=\"'small'\" (click)=\"next()\" icon=\"pi pi-angle-right\"/>\r\n    <p-button [size]=\"'small'\" (click)=\"last()\" icon=\"pi pi-angle-double-right\"/>\r\n  </div>\r\n\r\n  <div class=\"frame-slider\">\r\n    <span>{{ frameIndex + 1 }} / {{ animationLength || 1 }}</span>\r\n    <p-slider [ngModel]=\"frameIndex\" (ngModelChange)=\"onFrameIndexChanged($event)\" [min]=\"0\" [max]=\"(animationLength ?? 1) - 1\" class=\"slider\"/>\r\n  </div>\r\n\r\n  <p-knob [ngModel]=\"frameTime\" (ngModelChange)=\"onFrameTimeChanged($event)\" [size]=\"65\" [min]=\"1\" [max]=\"1000\" valueTemplate=\"{value}ms\"/>\r\n</div>\r\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'array-2d-highlight-layer',\n  imports: [],\n  templateUrl: './array-2d-highlight-layer.html',\n  styleUrl: './array-2d-highlight-layer.scss',\n})\nexport class Array2DHighlightLayer {\n  @Input()\n  public colors: string[];\n\n  @Input()\n  public value: string;\n}\n","<div class=\"highlight-layer\" [style.background-color]=\"colors[0]\">\r\n  @if (colors.length > 1) {\r\n    <array-2d-highlight-layer [colors]=\"colors.slice(1)\" [value]=\"value\"></array-2d-highlight-layer>\r\n  } @else {\r\n    <span>{{ value }}</span>\r\n  }\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { Array2dState } from '../../models/framer/array-2d/array-2d-state.type';\nimport { Array2DMetaData } from '../../models/renderer/array-2d/array-2d-metadata.type';\nimport { CardModule } from 'primeng/card';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { Array2DHighlightLayer } from './components/highlight-layer/array-2d-highlight-layer';\n\n@Component({\n  selector: 'array-2d-renderer',\n  imports: [CommonModule, CardModule, FormsModule, TableModule, Array2DHighlightLayer],\n  templateUrl: './array-2d-renderer.html',\n  styleUrl: './array-2d-renderer.scss',\n})\nexport class Array2DRenderer {\n  @Input()\n  public state: Array2dState;\n\n  @Input()\n  public metadata: Array2DMetaData;\n\n  public getMinHeight(): string {\n    return this.metadata?.minHeight ?? '100px';\n  }\n\n  public getDefaultColor(): string {\n    return this.metadata?.defaultColor ?? 'white';\n  }\n\n  public getCellSize(): string {\n    return this.metadata?.cellSize ?? '50px';\n  }\n\n  public getCellColors(cell: { value: string; highlightTags: string[] }): string[] {\n    return cell.highlightTags.map((tag) => {\n      const highlight = this.metadata?.highlightTags?.find((h) => h.tag === tag);\n      return highlight?.color ?? this.metadata?.defaultColor ?? 'white';\n    });\n  }\n}\n","<p-card [style.min-height]=\"getMinHeight()\">\r\n  <ng-template #header>\r\n    <div class=\"header\">\r\n      <span class=\"title\">{{ state?.name }}</span>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div class=\"table-container\">\r\n    <table class=\"array2d-table\">\r\n      @for (row of state?.values; track $index) {\r\n        <tr>\r\n          @for (cell of row; track $index) {\r\n            <td [style.background-color]=\"getDefaultColor()\" [style.width]=\"getCellSize()\" [style.height]=\"getCellSize()\">\r\n              @let colors = getCellColors(cell);\r\n              @if (colors.length !== 0) {\r\n                <array-2d-highlight-layer [colors]=\"getCellColors(cell)\" [value]=\"cell.value\"/>\r\n              } @else {\r\n                <span>{{ cell.value }}</span>\r\n              }\r\n            </td>\r\n          }\r\n        </tr>\r\n      }\r\n    </table>\r\n  </div>\r\n</p-card>\r\n","import { Component, Input } from '@angular/core';\nimport { Array2DHighlightLayer } from '../../array-2d-renderer/components/highlight-layer/array-2d-highlight-layer';\n\n@Component({\n  selector: 'chart-highlight-layer',\n  imports: [Array2DHighlightLayer],\n  templateUrl: './chart-highlight-layer.html',\n  styleUrl: './chart-highlight-layer.scss',\n})\nexport class ChartHighlightLayer {\n  @Input()\n  public colors: string[];\n}\n","<div class=\"highlight-layer\" [style.background-color]=\"colors[0]\">\r\n  @if (colors.length > 1) {\r\n    <chart-highlight-layer [colors]=\"colors.slice(1)\"></chart-highlight-layer>\r\n  }\r\n</div>\r\n","import { Component, Input } from '@angular/core';\nimport { ChartState } from '../../models/framer/chart/chart-state.type';\nimport { ChartMetaData } from '../../models/renderer/chart/chart-metadata.type';\nimport { CardModule } from 'primeng/card';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { ChartHighlightLayer } from './chart-highlight-layer/chart-highlight-layer';\n\n@Component({\n  selector: 'chart-renderer',\n  imports: [CommonModule, CardModule, FormsModule, TableModule, ChartHighlightLayer],\n  templateUrl: './chart-renderer.html',\n  styleUrl: './chart-renderer.scss',\n})\nexport class ChartRenderer {\n  @Input()\n  public state: ChartState;\n\n  @Input()\n  public metadata: ChartMetaData;\n\n  protected getBarColors(highlightTags: string[]): string[] {\n    return highlightTags.map((tag) => {\n      const highlight = this.metadata?.highlightTags?.find((h) => h.tag === tag);\n      return highlight?.color ?? this.metadata?.defaultColor ?? 'white';\n    });\n  }\n\n  protected getBarHeight(value: number): string {\n    return `calc(${(value / Math.max(...this.state.bars.map((bar) => bar.value), 1)) * 100}% - 2rem)`;\n  }\n\n  protected getDefaultColor(): string {\n    return this.metadata?.defaultColor ?? 'white';\n  }\n\n  protected getBarWidth(): string {\n    return this.metadata?.barWidth ?? '40px';\n  }\n\n  protected getBarGap(): string {\n    return this.metadata?.barGap ?? '10px';\n  }\n\n  protected getChartHeight(): string {\n    return this.metadata?.chartHeight ?? '200px';\n  }\n\n  protected getShowLabel(): boolean {\n    return this.metadata?.showLabel ?? true;\n  }\n\n  protected getShowValue(): boolean {\n    return this.metadata?.showValue ?? true;\n  }\n}\n","<p-card>\r\n  <ng-template #header>\r\n    <div class=\"header\">\r\n      <span class=\"title\">{{ state?.name }}</span>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div class=\"chart\" [style.height]=\"getChartHeight()\" [style.gap]=\"getBarGap()\">\r\n    @for (bar of state?.bars; track $index) {\r\n      <div class=\"bar-container\" [style.width]=\"getBarWidth()\">\r\n        @if (getShowValue()) {\r\n          <div class=\"value\">{{ bar.value }}</div>\r\n        }\r\n        <div class=\"bar\" [style.height]=\"getBarHeight(bar.value)\" [style.background-color]=\"getDefaultColor()\">\r\n          @let colors = getBarColors(bar.highlightTags);\r\n          @if (colors.length !== 0) {\r\n            <chart-highlight-layer [colors]=\"colors\"></chart-highlight-layer>\r\n          }\r\n        </div>\r\n        @if (getShowLabel()) {\r\n          <div class=\"label\">{{ bar.label }}</div>\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n</p-card>\r\n","import {\n  Component,\n  ElementRef,\n  Input,\n  SimpleChanges,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GraphState } from '../../models/framer/graph/graph-state.type';\nimport { GraphMetaData } from '../../models/renderer/graph/graph-metadata.type';\nimport cytoscape, {\n  Core,\n  CircleLayoutOptions,\n  ConcentricLayoutOptions,\n  BreadthFirstLayoutOptions,\n  LayoutOptions,\n} from 'cytoscape';\nimport { CardModule } from 'primeng/card';\nimport { FormsModule } from '@angular/forms';\nimport { SelectButtonModule } from 'primeng/selectbutton';\n\n@Component({\n  selector: 'graph-renderer',\n  standalone: true,\n  imports: [CommonModule, SelectButtonModule, CardModule, FormsModule],\n  templateUrl: './graph-renderer.html',\n  styleUrls: ['./graph-renderer.scss'],\n})\nexport class GraphRenderer implements AfterViewInit, OnChanges, OnDestroy {\n  @Input()\n  public state: GraphState;\n\n  @Input()\n  public metadata: GraphMetaData;\n\n  @ViewChild('cyContainer', { static: true })\n  protected cyContainer: ElementRef<HTMLDivElement>;\n\n  protected readonly circleLayout: CircleLayoutOptions = { name: 'circle' };\n  protected readonly concentricLayout: ConcentricLayoutOptions = {\n    name: 'concentric',\n    minNodeSpacing: 30,\n  };\n  protected readonly breadthFirstLayout: BreadthFirstLayoutOptions = {\n    name: 'breadthfirst',\n  };\n  protected readonly layoutOptions = [\n    { label: 'Circle', value: this.circleLayout },\n    { label: 'Concentric', value: this.concentricLayout },\n    { label: 'Breadth First ', value: this.breadthFirstLayout },\n  ];\n\n  private _currentLayout: LayoutOptions = this.circleLayout;\n  private _isInitialized: boolean = false;\n  private _cy: Core;\n\n  public get minHeight(): string {\n    return this.metadata?.minHeight ?? '400px';\n  }\n\n  public ngAfterViewInit(): void {\n    this.renderGraph();\n    this._isInitialized = true;\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if ((changes['state'] || changes['metadata']) && this.cyContainer && this._isInitialized) {\n      this.renderGraph();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this._cy?.destroy();\n    this._cy = undefined;\n  }\n\n  public changeLayout(layout: LayoutOptions): void {\n    this._currentLayout = layout;\n    if (this._cy) {\n      this._cy\n        .layout({ ...this._currentLayout, animate: true, animationDuration: 500 } as any)\n        .run();\n    }\n  }\n\n  private renderGraph(): void {\n    if (!this.state || !this.cyContainer) return;\n\n    const nodeTagColors: Record<string, string> = {};\n    this.metadata?.nodeHighlightTags?.forEach((tag) => (nodeTagColors[tag.tag] = tag.color));\n\n    const edgeTagColors: Record<string, string> = {};\n    this.metadata?.edgeHighlightTags?.forEach((tag) => (edgeTagColors[tag.tag] = tag.color));\n\n    const defaultNodeColor = this.metadata?.defaultNodeColor ?? '#ffffff';\n    const defaultEdgeColor = this.metadata?.defaultEdgeColor ?? '#000000';\n\n    const elements = [\n      ...this.state.nodes.map((n) => {\n        const highlightTag = n.highlightTags.at(-1);\n        return {\n          data: {\n            id: n.id,\n            label: n.label,\n            color: highlightTag\n              ? (nodeTagColors[highlightTag] ?? defaultNodeColor)\n              : defaultNodeColor,\n          },\n        };\n      }),\n      ...this.state.edges.map((e) => {\n        const highlightTag = e.highlightTags.at(-1);\n        return {\n          data: {\n            id: e.id,\n            source: e.source,\n            target: e.target,\n            label: e.label,\n            color: highlightTag\n              ? (edgeTagColors[highlightTag] ?? defaultEdgeColor)\n              : defaultEdgeColor,\n            weight: parseFloat(e.label) || 1,\n          },\n        };\n      }),\n    ];\n\n    if (!this._cy) {\n      this._cy = cytoscape({\n        container: this.cyContainer.nativeElement,\n        elements,\n        layout: this._currentLayout,\n        style: [\n          {\n            selector: 'node',\n            style: {\n              width: 40,\n              height: 40,\n              'background-color': 'data(color)',\n              label: 'data(label)',\n              'text-valign': 'center',\n              'text-halign': 'center',\n              'border-width': 1,\n              'border-color': '#000',\n              color: '#000',\n              'font-size': 14,\n            },\n          },\n          {\n            selector: 'edge',\n            style: {\n              'line-color': 'data(color)',\n              'target-arrow-shape': 'triangle',\n              'target-arrow-color': 'data(color)',\n              'curve-style': 'bezier',\n              label: 'data(label)',\n              'text-background-color': '#fff',\n              'text-background-opacity': 1,\n              color: '#000',\n              'font-size': 14,\n              width: 3.5,\n            },\n          },\n        ],\n      });\n      return;\n    }\n\n    this._cy.batch(() => {\n      const currentIds = new Set(elements.map((element) => element.data.id));\n      this._cy.elements().forEach((element) => {\n        if (!currentIds.has(element.id())) {\n          element.remove();\n\n          if ((element as any)._private.group !== 'edges') {\n            this._cy.layout(this._currentLayout).run();\n          }\n        }\n      });\n\n      for (const element of elements) {\n        const existing = this._cy.getElementById(element.data.id);\n        if (existing.nonempty()) {\n          existing.data(element.data);\n        } else {\n          this._cy.add(element);\n\n          if (!('source' in element.data)) {\n            this._cy.layout(this._currentLayout).run();\n          }\n        }\n      }\n    });\n  }\n}\n","<p-card>\r\n  <ng-template #header>\r\n    <div class=\"header\">\r\n      <span class=\"title\">{{ state?.name }}</span>\r\n\r\n      <div class=\"layout-toolbar p-fluid p-formgrid p-grid\" style=\"gap: 1rem;\">\r\n        <div class=\"p-field p-col-12 p-md-4\">\r\n          <p-selectbutton [options]=\"layoutOptions\" [ngModel]=\"circleLayout\" (ngModelChange)=\"changeLayout($event)\" optionLabel=\"label\" optionValue=\"value\" aria-labelledby=\"basic\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div #cyContainer class=\"graph\" [style.height]=\"minHeight\"></div>\r\n</p-card>\r\n","import { Component, Input } from '@angular/core';\nimport { LogState } from '../../models/framer/log/log-state.type';\nimport { LogMetaData } from '../../models/renderer/log/log-metadata.type';\nimport { CommonModule } from '@angular/common';\nimport { CardModule } from 'primeng/card';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'log-renderer',\n  imports: [CommonModule, CardModule, FormsModule],\n  templateUrl: './log-renderer.html',\n  styleUrl: './log-renderer.scss',\n})\nexport class LogRenderer {\n  @Input()\n  public state: LogState;\n\n  @Input()\n  public metadata: LogMetaData;\n\n  public getMinHeight(): string {\n    return this.metadata?.minHeight ?? '100px';\n  }\n\n  public getColor(): string {\n    return this.metadata?.defaultColor ?? 'black';\n  }\n}\n","<p-card [style.min-height]=\"getMinHeight()\">\r\n  <ng-template #header>\r\n    <div class=\"header\">\r\n      <span class=\"title\">{{ state?.name }}</span>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <div class=\"message\" [style.color]=\"getColor()\">{{ state.message }}</div>\r\n</p-card>\r\n","import { Component, Input } from '@angular/core';\nimport { Animation } from './models/framer/animation.type';\nimport { Frame } from './models/framer/frame.type';\nimport { FormsModule } from '@angular/forms';\nimport { GraphState } from './models/framer/graph/graph-state.type';\nimport { GraphRenderer } from './components/graph-renderer/graph-renderer';\nimport { GraphMetaData } from './models/renderer/graph/graph-metadata.type';\nimport { KnobModule } from 'primeng/knob';\nimport { SliderModule } from 'primeng/slider';\nimport { ButtonModule } from 'primeng/button';\nimport { RendererMetadata } from './models/renderer/renderer-metadata.type';\nimport { ObjectMetadata } from './models/renderer/object-metadata.type';\nimport { ChartMetaData } from './models/renderer/chart/chart-metadata.type';\nimport { Array2DMetaData } from './models/renderer/array-2d/array-2d-metadata.type';\nimport { LogMetaData } from './models/renderer/log/log-metadata.type';\nimport { ChartState } from './models/framer/chart/chart-state.type';\nimport { Array2dState } from './models/framer/array-2d/array-2d-state.type';\nimport { LogState } from './models/framer/log/log-state.type';\nimport { LogRenderer } from './components/log-renderer/log-renderer';\nimport { Array2DRenderer } from './components/array-2d-renderer/array-2d-renderer';\nimport { ChartRenderer } from './components/chart-renderer/chart-renderer';\nimport { WebPlayer } from '../web-player/web-player';\n\n@Component({\n  selector: 'web-renderer',\n  imports: [\n    FormsModule,\n    GraphRenderer,\n    KnobModule,\n    SliderModule,\n    ButtonModule,\n    LogRenderer,\n    Array2DRenderer,\n    ChartRenderer,\n    WebPlayer,\n  ],\n  templateUrl: './web-renderer.html',\n  styleUrls: ['./web-renderer.scss'],\n})\nexport class WebRenderer {\n  @Input()\n  public animation: Animation;\n\n  @Input()\n  public rendererMetadata: RendererMetadata;\n\n  @Input()\n  public frameIndex: number = 0;\n\n  @Input()\n  public hasPlayer: boolean = true;\n\n  public get currentFrame(): Frame | null {\n    return (\n      this.animation?.[Math.max(0, Math.min(this.frameIndex, this.animation.length - 1))] ?? null\n    );\n  }\n\n  protected getDocumentName(): string {\n    return this.rendererMetadata?.documentName ?? 'Algorithm';\n  }\n\n  protected onFrameIndexChange(frameIndex: number) {\n    this.frameIndex = frameIndex;\n  }\n\n  protected convertToGraphState(state: unknown): GraphState {\n    return state as GraphState;\n  }\n\n  protected convertToChartState(state: unknown): ChartState {\n    return state as ChartState;\n  }\n\n  protected convertToArray2dState(state: unknown): Array2dState {\n    return state as Array2dState;\n  }\n\n  protected convertToLogState(state: unknown): LogState {\n    return state as LogState;\n  }\n\n  protected getMetaData(type: string, id: string): ObjectMetadata {\n    return this.rendererMetadata?.objectMetaData?.find(\n      (objectMetadataEntry) => objectMetadataEntry.type === type,\n    )?.metadata;\n  }\n\n  protected convertToGraphMetadata(metadata: ObjectMetadata): GraphMetaData {\n    return metadata as GraphMetaData;\n  }\n\n  protected convertToChartMetaData(metadata: ObjectMetadata): ChartMetaData {\n    return metadata as ChartMetaData;\n  }\n\n  protected convertToArray2DMetaData(metadata: ObjectMetadata): Array2DMetaData {\n    return metadata as Array2DMetaData;\n  }\n\n  protected convertToLogMetaData(metadata: ObjectMetadata): LogMetaData {\n    return metadata as LogMetaData;\n  }\n}\n","@if (hasPlayer) {\r\n  <web-player [animationLength]=\"animation?.length\" (frameIndexChange)=\"onFrameIndexChange($event)\"></web-player>\r\n}\r\n\r\n<span class=\"title\">{{ getDocumentName() }}</span>\r\n\r\n@if (currentFrame; as frame) {\r\n  @for (frameState of frame; track $index) {\r\n    @switch (frameState.type) {\r\n      @case ('Graph') {\r\n        <graph-renderer [state]=\"convertToGraphState(frameState.state)\" [metadata]=\"convertToGraphMetadata(getMetaData(frameState.type, frameState.id))\"/>\r\n      }\r\n\r\n      @case ('Log') {\r\n        <log-renderer [state]=\"convertToLogState(frameState.state)\" [metadata]=\"convertToLogMetaData(getMetaData(frameState.type, frameState.id))\"/>\r\n      }\r\n\r\n      @case ('Array2D') {\r\n        <array-2d-renderer [state]=\"convertToArray2dState(frameState.state)\" [metadata]=\"convertToArray2DMetaData(getMetaData(frameState.type, frameState.id))\"/>\r\n      }\r\n\r\n      @case ('Chart') {\r\n        <chart-renderer [state]=\"convertToChartState(frameState.state)\" [metadata]=\"convertToChartMetaData(getMetaData(frameState.type, frameState.id))\"/>\r\n      }\r\n    }\r\n  }\r\n}\r\n","/*\n * Public API Surface of typescript-angular-renderer\n */\n\nexport * from './lib/web-player/web-player';\nexport * from './lib/web-renderer/components/array-2d-renderer/array-2d-renderer';\nexport * from './lib/web-renderer/components/array-2d-renderer/components/highlight-layer/array-2d-highlight-layer';\nexport * from './lib/web-renderer/components/chart-renderer/chart-highlight-layer/chart-highlight-layer';\nexport * from './lib/web-renderer/components/chart-renderer/chart-renderer';\nexport * from './lib/web-renderer/components/graph-renderer/graph-renderer';\nexport * from './lib/web-renderer/components/log-renderer/log-renderer';\nexport * from './lib/web-renderer/models/framer/animation.type';\nexport * from './lib/web-renderer/models/framer/array-2d/array-2d-cell-state.type';\nexport * from './lib/web-renderer/models/framer/array-2d/array-2d-state.type';\nexport * from './lib/web-renderer/models/framer/chart/chart-bar-state.type';\nexport * from './lib/web-renderer/models/framer/chart/chart-state.type';\nexport * from './lib/web-renderer/models/framer/frame-state.type';\nexport * from './lib/web-renderer/models/framer/frame.type';\nexport * from './lib/web-renderer/models/framer/graph/graph-edge-state.type';\nexport * from './lib/web-renderer/models/framer/graph/graph-node-state.type';\nexport * from './lib/web-renderer/models/framer/graph/graph-state.type';\nexport * from './lib/web-renderer/models/framer/log/log-state.type';\nexport * from './lib/web-renderer/models/renderer/array-2d/array-2d-highlight-tag.type';\nexport * from './lib/web-renderer/models/renderer/array-2d/array-2d-metadata-entry.type';\nexport * from './lib/web-renderer/models/renderer/array-2d/array-2d-metadata.type';\nexport * from './lib/web-renderer/models/renderer/chart/chart-highlight-tag.type';\nexport * from './lib/web-renderer/models/renderer/chart/chart-metadata-entry.type';\nexport * from './lib/web-renderer/models/renderer/chart/chart-metadata.type';\nexport * from './lib/web-renderer/models/renderer/graph/graph-highlight-tag.type';\nexport * from './lib/web-renderer/models/renderer/graph/graph-metadata-entry.type';\nexport * from './lib/web-renderer/models/renderer/graph/graph-metadata.type';\nexport * from './lib/web-renderer/models/renderer/i-renderer.interface';\nexport * from './lib/web-renderer/models/renderer/log/log-metadata-entry.type';\nexport * from './lib/web-renderer/models/renderer/log/log-metadata.type';\nexport * from './lib/web-renderer/models/renderer/object-metadata-entry-base.type';\nexport * from './lib/web-renderer/models/renderer/object-metadata-entry.type';\nexport * from './lib/web-renderer/models/renderer/object-metadata.type';\nexport * from './lib/web-renderer/models/renderer/renderer-metadata.type';\nexport * from './lib/web-renderer/web-renderer';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3"],"mappings":"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"}