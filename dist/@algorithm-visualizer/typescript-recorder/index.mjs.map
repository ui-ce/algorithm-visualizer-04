{"version":3,"sources":["../../../modules/recorder/typescript-recorder/src/models/array-2d/array-2d-action.enum.ts","../../../modules/recorder/typescript-recorder/src/models/chart/chart-action.enum.ts","../../../modules/recorder/typescript-recorder/src/models/graph/graph-action.enum.ts","../../../modules/recorder/typescript-recorder/src/models/log/log-action.enum.ts","../../../modules/recorder/typescript-recorder/src/recorders/recorder.ts","../../../modules/recorder/typescript-recorder/src/recorders/array-2d-recorder.ts","../../../modules/recorder/typescript-recorder/src/recorders/chart-recorder.ts","../../../modules/recorder/typescript-recorder/src/recorders/graph-recorder.ts","../../../modules/recorder/typescript-recorder/src/recorders/log-recorder.ts","../../../modules/recorder/typescript-recorder/src/recorders/recorder-engine.ts"],"sourcesContent":["export enum Array2DAction {\r\n  SET_CELLS = 'SetCells',\r\n  INSERT_CELLS = 'InsertCells',\r\n  REMOVE_CELLS = 'RemoveCells',\r\n  PUSH_CELLS = 'PushCells',\r\n  POP_CELLS = 'PopCells',\r\n  SHIFT_CELLS = 'ShiftCells',\r\n  UNSHIFT_CELLS = 'UnshiftCells',\r\n  INSERT_ROWS = 'InsertRows',\r\n  PUSH_ROWS = 'PushRows',\r\n  POP_ROWS = 'PopRows',\r\n  SHIFT_ROWS = 'ShiftRows',\r\n  UNSHIFT_ROWS = 'UnshiftRows',\r\n  SET_CELLS_HIGHLIGHT = 'SetCellsHighlight',\r\n  CLEAR_CELLS_HIGHLIGHT = 'ClearCellsHighlight',\r\n  CLEAR_ALL_CELLS_HIGHLIGHT = 'ClearAllCellsHighlight',\r\n  CLEAR_ALL_ROWS_HIGHLIGHT = 'ClearAllRowsHighlight',\r\n}","export enum ChartAction {\r\n  SET_CELLS = 'SetCells',\r\n  REMOVE_CELLS = 'RemoveCells',\r\n  INSERT_CELLS = 'InsertCells',\r\n  PUSH_CELLS = 'PushCells',\r\n  POP_CELLS = 'PopCells',\r\n  SHIFT_CELLS = 'ShiftCells',\r\n  UNSHIFT_CELLS = 'UnshiftCells',\r\n  SET_CELLS_HIGHLIGHT = 'SetCellsHighlight',\r\n  CLEAR_CELLS_HIGHLIGHT = 'ClearCellsHighlight'\r\n}","export enum GraphAction {\r\n  ADD_NODE = 'AddNode',\r\n  REMOVE_NODE = 'RemoveNode',\r\n  ADD_EDGE = 'AddEdge',\r\n  REMOVE_EDGE = 'RemoveEdge',\r\n  REMOVE_EDGES = 'RemoveEdges',\r\n  SET_NODE_HIGHLIGHT = 'SetNodeHighlight',\r\n  CLEAR_NODE_HIGHLIGHT = 'ClearNodeHighlight',\r\n  CLEAR_ALL_NODES_HIGHLIGHT = 'ClearAllNodesHighlight',\r\n  SET_EDGE_HIGHLIGHT = 'SetEdgeHighlight',\r\n  SET_EDGES_HIGHLIGHT = 'SetEdgesHighlight',\r\n  CLEAR_EDGE_HIGHLIGHT = 'ClearEdgeHighlight',\r\n  CLEAR_EDGES_HIGHLIGHT = 'ClearEdgesHighlight',\r\n  CLEAR_ALL_EDGES_HIGHLIGHT = 'ClearAllEdgesHighlight',\r\n}\r\n","export enum LogAction {\r\n  SET_MESSAGE = 'SetMessage',\r\n  CLEAR_MESSAGE = 'ClearMessage',\r\n}","import { RecorderEngine } from './recorder-engine';\r\nimport { Command } from '../models/command.type';\r\n\r\nexport abstract class Recorder {\r\n  private _isDestroyed: boolean = false;\r\n\r\n  protected constructor(\r\n    private readonly _recorderEngine: RecorderEngine,\r\n    private readonly _param: unknown,\r\n    private readonly _type: string,\r\n    private readonly _id: string = crypto.randomUUID(),\r\n  ) {\r\n    this.record('Init', this._param);\r\n  }\r\n\r\n  protected record(action: string, params: unknown = {}): void {\r\n    if (this._isDestroyed) {\r\n      return;\r\n    }\r\n\r\n    const command: Command = {\r\n      id: this._id,\r\n      type: this._type,\r\n      action,\r\n      params: structuredClone(params),\r\n    };\r\n    this._recorderEngine.record(command);\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.record('Destroy');\r\n    this._isDestroyed = true;\r\n  }\r\n}\r\n","import { Recorder } from './recorder';\r\nimport { RecorderEngine } from './recorder-engine';\r\nimport { Array2DInitParams } from '../models/array-2d/array-2d-init-params.type';\r\nimport { Array2DSetCellsParams } from '../models/array-2d/array-2d-set-cells-params.type';\r\nimport { Array2DAction } from '../models/array-2d/array-2d-action.enum';\r\nimport { Array2DInsertCellsParams } from '../models/array-2d/array-2d-insert-cells-params.type';\r\nimport { Array2DPushCellsParams } from '../models/array-2d/array-2d-push-cells-params.type';\r\nimport { Array2DPopCellsParams } from '../models/array-2d/array-2d-pop-cells-params.type';\r\nimport { Array2DRemoveCellsParams } from '../models/array-2d/array-2d-remove-cells-params.type';\r\nimport { Array2DInsertRowsParams } from '../models/array-2d/array-2d-insert-rows-params.type';\r\nimport { Array2DPushRowsParams } from '../models/array-2d/array-2d-push-rows-params.type';\r\nimport { Array2DPopRowParams } from '../models/array-2d/array-2d-pop-row-params.type';\r\nimport { Array2DUnshiftRowsParams } from '../models/array-2d/array-2d-unshift-rows-params.type';\r\nimport { Array2DSetCellsHighlightParams } from '../models/array-2d/array-2d-set-cells-highlight-params.type';\r\nimport { Array2DClearCellsHighlightParams } from '../models/array-2d/array-2d-clear-cells-highlight-params.type';\r\nimport { Array2DShiftCellsParams } from '../models/array-2d/array-2d-shift-cells-params.type';\r\nimport { Array2DUnshiftCellsParams } from '../models/array-2d/array-2d-unshift-cells-params.type';\r\nimport { Array2DShiftRowsParams } from '../models/array-2d/array-2d-shift-rows-params.type';\r\nimport { Array2DClearAllCellsHighlightParams } from '../models/array-2d/array-2d-clear-all-cells-highlight-params.type';\r\nimport { Array2DClearAllRowsHighlightParams } from '../models/array-2d/array-2d-clear-all-rows-highlight-params.type';\r\n\r\nexport class Array2dRecorder extends Recorder {\r\n  public constructor(recorderEngine: RecorderEngine, param: Array2DInitParams, id?: string) {\r\n    super(recorderEngine, param, 'Array2D', id);\r\n  }\r\n\r\n  public setCells(param: Array2DSetCellsParams): void {\r\n    this.record(Array2DAction.SET_CELLS, param);\r\n  }\r\n\r\n  public insertCells(param: Array2DInsertCellsParams): void {\r\n    this.record(Array2DAction.INSERT_CELLS, param);\r\n  }\r\n\r\n  public removeCells(param: Array2DRemoveCellsParams): void {\r\n    this.record(Array2DAction.REMOVE_CELLS, param);\r\n  }\r\n\r\n  public pushCells(param: Array2DPushCellsParams): void {\r\n    this.record(Array2DAction.PUSH_CELLS, param);\r\n  }\r\n\r\n  public popCells(param: Array2DPopCellsParams): void {\r\n    this.record(Array2DAction.POP_CELLS, param);\r\n  }\r\n\r\n  public shiftCells(param: Array2DShiftCellsParams): void {\r\n    this.record(Array2DAction.SHIFT_CELLS, param);\r\n  }\r\n\r\n  public unshiftCells(param: Array2DUnshiftCellsParams): void {\r\n    this.record(Array2DAction.UNSHIFT_CELLS, param);\r\n  }\r\n\r\n  public insertRows(param: Array2DInsertRowsParams): void {\r\n    this.record(Array2DAction.INSERT_ROWS, param);\r\n  }\r\n\r\n  public pushRows(param: Array2DPushRowsParams): void {\r\n    this.record(Array2DAction.PUSH_ROWS, param);\r\n  }\r\n\r\n  public popRows(param: Array2DPopRowParams): void {\r\n    this.record(Array2DAction.POP_ROWS, param);\r\n  }\r\n\r\n  public shiftRows(param: Array2DShiftRowsParams): void {\r\n    this.record(Array2DAction.SHIFT_ROWS, param);\r\n  }\r\n\r\n  public unshiftRows(param: Array2DUnshiftRowsParams): void {\r\n    this.record(Array2DAction.UNSHIFT_ROWS, param);\r\n  }\r\n\r\n  public setCellsHighlight(param: Array2DSetCellsHighlightParams): void {\r\n    this.record(Array2DAction.SET_CELLS_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearCellsHighlight(param: Array2DClearCellsHighlightParams): void {\r\n    this.record(Array2DAction.CLEAR_CELLS_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearAllCellsHighlight(param: Array2DClearAllCellsHighlightParams): void {\r\n    this.record(Array2DAction.CLEAR_ALL_CELLS_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearAllRowsHighlight(param: Array2DClearAllRowsHighlightParams): void {\r\n    this.record(Array2DAction.CLEAR_ALL_ROWS_HIGHLIGHT, param);\r\n  }\r\n}\r\n","import { Recorder } from './recorder';\r\nimport { RecorderEngine } from './recorder-engine';\r\nimport { ChartInitParams } from '../models/chart/chart-init-params.type';\r\nimport { ChartSetCellsParams } from '../models/chart/chart-set-cells-params.type';\r\nimport { ChartAction } from '../models/chart/chart-action.enum';\r\nimport { ChartInsertCellsParams } from '../models/chart/chart-insert-cells-params.type';\r\nimport { ChartPushCellsParams } from '../models/chart/chart-push-cells-params.type';\r\nimport { ChartPopCellsParams } from '../models/chart/chart-pop-cells-params.type';\r\nimport { ChartShiftCellsParams } from '../models/chart/chart-shift-cells-params.type';\r\nimport { ChartUnshiftCellsParams } from '../models/chart/chart-unshift-cells-params.type';\r\nimport { ChartSetCellsHighlightParams } from '../models/chart/chart-set-cells-highlight-params.type';\r\nimport { ChartClearCellsHighlightParams } from '../models/chart/chart-clear-cells-highlight-params.type';\r\nimport { ChartRemoveCellsParams } from '../models/chart/chart-remove-cells-params.type';\r\n\r\nexport class ChartRecorder extends Recorder {\r\n  public constructor(recorderEngine: RecorderEngine, param: ChartInitParams, id?: string) {\r\n    super(recorderEngine, param, 'Chart', id);\r\n  }\r\n\r\n  public setCells(param: ChartSetCellsParams): void {\r\n    this.record(ChartAction.SET_CELLS, param);\r\n  }\r\n\r\n  public insertCells(param: ChartInsertCellsParams): void {\r\n    this.record(ChartAction.INSERT_CELLS, param);\r\n  }\r\n\r\n  public removeCells(param: ChartRemoveCellsParams): void {\r\n    this.record(ChartAction.REMOVE_CELLS, param);\r\n  }\r\n\r\n  public pushCells(param: ChartPushCellsParams): void {\r\n    this.record(ChartAction.PUSH_CELLS, param);\r\n  }\r\n\r\n  public popCells(param: ChartPopCellsParams): void {\r\n    this.record(ChartAction.POP_CELLS, param);\r\n  }\r\n\r\n  public shiftCells(param: ChartShiftCellsParams): void {\r\n    this.record(ChartAction.SHIFT_CELLS, param);\r\n  }\r\n\r\n  public unshiftCells(param: ChartUnshiftCellsParams): void {\r\n    this.record(ChartAction.UNSHIFT_CELLS, param);\r\n  }\r\n\r\n  public setCellsHighlight(param: ChartSetCellsHighlightParams): void {\r\n    this.record(ChartAction.SET_CELLS_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearCellsHighlight(param: ChartClearCellsHighlightParams): void {\r\n    this.record(ChartAction.CLEAR_CELLS_HIGHLIGHT, param);\r\n  }\r\n}\r\n","import { Recorder } from './recorder';\r\nimport { RecorderEngine } from './recorder-engine';\r\nimport { GraphAction } from '../models/graph/graph-action.enum';\r\nimport { GraphAddNodeParams } from '../models/graph/graph-add-node-params.type';\r\nimport { GraphRemoveNodeParams } from '../models/graph/graph-remove-node-params.type';\r\nimport { GraphAddEdgeParams } from '../models/graph/graph-add-edge-params.type';\r\nimport { GraphRemoveEdgeParams } from '../models/graph/graph-remove-edge-params.type';\r\nimport { GraphRemoveEdgesParams } from '../models/graph/graph-remove-edges-params.type';\r\nimport { GraphSetNodeHighlightParams } from '../models/graph/graph-set-node-highlight-params.type';\r\nimport { GraphClearNodeHighlightParams } from '../models/graph/graph-clear-node-highlight-params.type';\r\nimport { GraphSetEdgeHighlightParams } from '../models/graph/graph-set-edge-highlight-params.type';\r\nimport { GraphSetEdgesHighlightParams } from '../models/graph/graph-set-edges-highlight-params.type';\r\nimport { GraphClearEdgeHighlightParams } from '../models/graph/graph-clear-edge-highlight-params.type';\r\nimport { GraphClearEdgesHighlightParams } from '../models/graph/graph-clear-edges-highlight-params.type';\r\nimport { GraphInitParams } from '../models/graph/graph-init-params.type';\r\nimport { GraphClearAllEdgesHighlightParams } from '../models/graph/graph-clear-all-edges-highlight-params.type';\r\nimport { GraphClearAllNodesHighlightParams } from '../models/graph/graph-clear-all-nodes-highlight-params.type';\r\n\r\nexport class GraphRecorder extends Recorder {\r\n  constructor(recorderEngine: RecorderEngine, param: GraphInitParams, id?: string) {\r\n    super(recorderEngine, param, 'Graph', id);\r\n  }\r\n\r\n  public addNode(param: GraphAddNodeParams): void {\r\n    this.record(GraphAction.ADD_NODE, param);\r\n  }\r\n\r\n  public removeNode(param: GraphRemoveNodeParams): void {\r\n    this.record(GraphAction.REMOVE_NODE, param);\r\n  }\r\n\r\n  public addEdge(param: GraphAddEdgeParams): void {\r\n    this.record(GraphAction.ADD_EDGE, param);\r\n  }\r\n\r\n  public removeEdge(param: GraphRemoveEdgeParams): void {\r\n    this.record(GraphAction.REMOVE_EDGE, param);\r\n  }\r\n\r\n  public removeEdges(param: GraphRemoveEdgesParams): void {\r\n    this.record(GraphAction.REMOVE_EDGES, param);\r\n  }\r\n\r\n  public setNodeHighlight(param: GraphSetNodeHighlightParams): void {\r\n    this.record(GraphAction.SET_NODE_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearNodeHighlight(param: GraphClearNodeHighlightParams): void {\r\n    this.record(GraphAction.CLEAR_NODE_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearAllNodesHighlight(param: GraphClearAllNodesHighlightParams): void {\r\n    this.record(GraphAction.CLEAR_ALL_NODES_HIGHLIGHT, param);\r\n  }\r\n\r\n  public setEdgeHighlight(param: GraphSetEdgeHighlightParams): void {\r\n    this.record(GraphAction.SET_EDGE_HIGHLIGHT, param);\r\n  }\r\n\r\n  public setEdgesHighlight(param: GraphSetEdgesHighlightParams): void {\r\n    this.record(GraphAction.SET_EDGES_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearEdgeHighlight(param: GraphClearEdgeHighlightParams): void {\r\n    this.record(GraphAction.CLEAR_EDGE_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearEdgesHighlight(param: GraphClearEdgesHighlightParams): void {\r\n    this.record(GraphAction.CLEAR_EDGES_HIGHLIGHT, param);\r\n  }\r\n\r\n  public clearAllEdgesHighlight(param: GraphClearAllEdgesHighlightParams): void {\r\n    this.record(GraphAction.CLEAR_ALL_EDGES_HIGHLIGHT, param);\r\n  }\r\n}\r\n","import { Recorder } from './recorder';\r\nimport { RecorderEngine } from './recorder-engine';\r\nimport { LogAction } from '../models/log/log-action.enum';\r\nimport { LogSetMessageParams } from '../models/log/log-set-message-params.type';\r\nimport { LogClearMessageParams } from '../models/log/log-clear-message-params.type';\r\nimport { LogInitParams } from '../models/log/log-init-params.type';\r\n\r\nexport class LogRecorder extends Recorder {\r\n  public constructor(recorderEngine: RecorderEngine, param: LogInitParams, id?: string) {\r\n    super(recorderEngine, param, 'Log', id);\r\n  }\r\n\r\n  public setMessage(param: LogSetMessageParams): void {\r\n    this.record(LogAction.SET_MESSAGE, param);\r\n  }\r\n\r\n  public clearMessage(param: LogClearMessageParams): void {\r\n    this.record(LogAction.CLEAR_MESSAGE, param);\r\n  }\r\n}\r\n","import { Command } from '../models/command.type';\r\nimport { Recording } from '../models/recording.type';\r\n\r\nexport class RecorderEngine {\r\n  private readonly _commands: Recording = [];\r\n  private _queuedRecordFunctions: Function[] = [];\r\n  private _isGrouping: boolean = false;\r\n\r\n  public record(command: Command): void {\r\n    if (!this._isGrouping) {\r\n      this._isGrouping = true;\r\n      this.internalBeginGroup();\r\n      this._isGrouping = false;\r\n    }\r\n\r\n    this._commands[this._commands.length - 1].push(command);\r\n  }\r\n\r\n  public beginGroup(): void {\r\n    this._isGrouping = true;\r\n    this.internalBeginGroup();\r\n  }\r\n\r\n  public endGroup(): void {\r\n    this._isGrouping = false;\r\n  }\r\n\r\n  public queue(recordFunction: Function): void {\r\n    this._queuedRecordFunctions.push(recordFunction);\r\n  }\r\n\r\n  public getRecording(): Recording {\r\n    return this._commands;\r\n  }\r\n\r\n  public internalBeginGroup(): void {\r\n    this._commands.push([]);\r\n    this._queuedRecordFunctions.forEach((recordFunction) => recordFunction());\r\n    this._queuedRecordFunctions = [];\r\n  }\r\n}\r\n"],"mappings":"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","names":["Array2DAction","ChartAction","GraphAction","LogAction"]}